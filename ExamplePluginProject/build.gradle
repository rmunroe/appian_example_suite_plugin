buildscript {
  dependencies {
    classpath 'org.hidetake:gradle-ssh-plugin:2.10.1'
  }
}

plugins {
  id 'java'
  id 'groovy'
  id 'org.owasp.dependencycheck' version '6.5.3'
  id 'com.github.spotbugs' version '4.6.0'
}

apply plugin: 'org.hidetake.ssh'
remotes {
  // Set these values to your test Appian instance (e.g. localhost or VM)
  appian {
    host = 'some.hostname'
    user = 'myusername'
    password = 'p4ssw0rd'
  }
}

repositories {
  mavenCentral()
  maven {
    url 'https://repo.clojars.org'
  }
  maven {
    url "https://oss.sonatype.org/content/repositories/snapshots/"
  }

  flatDir {
    dirs 'lib-compile'
  }
}

dependencies {
  // Put Maven-hosted dependencies here. They will be copied to META-INF/lib when building the jar. Example:
  //  implementation 'com.google.code.gson:gson:2.9.0'
  //  implementation 'commons-io:commons-io:2.11.0'
  //  implementation 'org.apache.commons:commons-lang3:3.12.0'

  compileOnly fileTree(dir: 'lib-compile', include: '*.jar')
  implementation fileTree(dir: 'lib-include', include: '*.jar')

  compileOnly 'org.apache.logging.log4j:log4j-1.2-api:2.17.1'

  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.2'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

  spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.11.0'
}

test {
  useJUnitPlatform()
}

configurations {
  testImplementation.extendsFrom compileOnly
  implementation.transitive = false
}

spotbugsMain {
  reports {
    html {
      enabled = true
      stylesheet = 'fancy-hist.xsl'
    }
    xml {
      enabled = false
    }
  }
}

jar {
  dependsOn check
  duplicatesStrategy = DuplicatesStrategy.FAIL

  configurations.implementation.setCanBeResolved(true)

  into('META-INF/lib') {
    from(configurations.implementation)
  }

  into('src') {
    from (sourceSets.main.allJava)
  }

  manifest {
    attributes("Spring-Context": "*;publish-context:=false")
  }
}

task buildAndDeploy {
  group = 'install'
  dependsOn jar

  doLast {
    ssh.run {
      session(remotes.appian) {
        put from: 'build/libs/*', into: '/APPIAN_HOME/_admin/plugins/'
      }
    }
  }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

// If this shows as an error in IntelliJ, simply ignore
version = new XmlSlurper().parse(file('src/main/resources/appian-plugin.xml')).'plugin-info'.version